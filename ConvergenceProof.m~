clear
clc

%foldersource='C:\Users\ctc\Documents\GitHub\NewtonRaphsonHeatBalance\';
foldersource='/Users/Shaun/Documents/GitHub/NewtonRaphsonHeatBalance/';
%foldersource='/mnt/HA/groups/nieburGrp/Shaun/NewtonRaphsonHeatBalance/';

exceptions=[];
conductorData=importfileAA(strcat(foldersource,'ConductorInfo.csv'));
[conductorCount,~]=size(conductorData);

conductorData.ResistanceACLowdegc=conductorData.ResistanceDCLowdegc;
conductorData.ResistanceACLowdegcMeter=conductorData.ResistanceACLowdegc./conductorData.MetersperResistanceInterval;
conductorData.ResistanceACHighdegcMeter=conductorData.ResistanceACHighdegc./conductorData.MetersperResistanceInterval;
conductorData.simulated=zeros(conductorCount,1);

Tref=25;
epsilons=0.9;
H=0;
phi=90*pi/180;
sigmab=5.6697e-8;
alphas=0.9;
a=-33:65;
[~,a3]=size(a);
spacer=10;

weatherPermutationCount=a3*(spacer+1)^3;
deltainfo=zeros(weatherPermutationCount,conductorCount);
delta1info=zeros(weatherPermutationCount,conductorCount);
psolinfo=zeros(weatherPermutationCount,conductorCount);
windinfo=zeros(weatherPermutationCount,conductorCount);
ambtempinfo=zeros(weatherPermutationCount,conductorCount);
currentinfo=zeros(weatherPermutationCount,conductorCount);
rootinfo=zeros(weatherPermutationCount,conductorCount);

for c1=1:12:conductorCount
    for c=c1:c1+11
        root=realmax.*ones(weatherPermutationCount,1);
        delta=1.*ones(weatherPermutationCount,1);
        delta1=zeros(weatherPermutationCount,1);
        psols=zeros(weatherPermutationCount,1);
        winds=zeros(weatherPermutationCount,1);
        ambtemps=zeros(weatherPermutationCount,1);
        currents=zeros(weatherPermutationCount,1);
        
        cdata=conductorData(c,:);
        maxcurrent=ceil(1.5*cdata.AllowableAmpacity);
        diam=cdata.DiamCompleteCable*0.0254;
        maxpsol=1050*diam*alphas;

        beta=(cdata.ResistanceACHighdegcMeter-cdata.ResistanceACLowdegcMeter)/(cdata.HighTemp-cdata.LowTemp);
        alpha=cdata.ResistanceACHighdegcMeter-beta*cdata.HighTemp;    
        counter=0;
        for psol=0:maxpsol/spacer:maxpsol
            disp(psol)
            for imagnitude=0:maxcurrent/spacer:maxcurrent
                IIstar=abs(imagnitude)^2; 
                for ambtemp=-33:65
                    GuessTc=((psol+IIstar*(alpha+25*beta))/(pi*diam*sigmab*epsilons)+((ambtemp+273)^4))^(1/4)-273; 
                    GuessTc2=(psol+IIstar*(alpha+25*beta))/(pi*diam*epsilons*sigmab*((1.38e8)+ambtemp*(1.39e6))+pi*(2.42e-2)*nu)
                    for Vw=0:10/spacer:10
                        counter=counter+1;
                        psols(counter)=psol;
                        winds(counter)=Vw;
                        ambtemps(counter)=ambtemp;
                        currents(counter)=imagnitude;
                        [roott,~,~,~,~,~,~] =GetTempNewton(imagnitude,ambtemp,H,diam,phi,Vw,alpha,beta,epsilons,psol);
                        root(counter,1)=roott;
                        rerun=1;
                        reruncounter=0;
                        while(rerun)
                            rerun=0;
                            reruncounter=reruncounter+1;
                            if(reruncounter>5000)
                                msg='error condition!';
                                error(msg)
                            end

                            for Tcc=root(counter,1)-delta(counter,1):0.1:GuessTc+delta1(counter,1)
                                [Tc,I2R,I2Rprime,Prad,Pradprime,Pcon,Pconprime] =GetTempNewtonFirstIteration(imagnitude,ambtemp,H,diam,phi,Vw,alpha,beta,epsilons,psol,Tcc);
                                if(Tc<root(counter,1)-delta(counter,1))
                                    delta(counter,1)=root(counter,1)-Tc;
                                    rerun=1;
                                elseif(Tc>GuessTc+delta1(counter,1))
                                    delta1(counter,1)=Tc-GuessTc;
                                    rerun=1;
                                end
                                if(rerun) 
                                    break 
                                end
                            end
                        end
                        for Tcc=roott-delta(counter,1):0.1:GuessTc+delta1(counter,1)-0.1                                                              
                            [Tc,~,~,~,~,~,~] =GetTempNewtonFirstIteration(imagnitude,ambtemp,H,diam,phi,Vw,alpha,beta,epsilons,psol,Tcc);
                            for Tcc1=Tcc+0.1:0.1:GuessTc+delta1(counter,1)
                                [Tc1,~,~,~,~,~,~] =GetTempNewtonFirstIteration(imagnitude,ambtemp,H,diam,phi,Vw,alpha,beta,epsilons,psol,Tcc1);
                                C=abs(Tc-Tc1)/abs(Tcc-Tcc1);
                                if(C>1)
                                    exceptions=[exceptions;c,imagnitude,ambtemp,Vw,psol,roott,GuessTc,delta(counter,1),delta1(counter,1),Tcc,Tcc1];
                                end
                            end
                        end
                    end
                end
            end
        end
        %end
        %disp(strcat(num2str(delta(c)),',',num2str(delta1(c)),',',num2str(100*c/conductorCount),',',cellstr(cdata.CodeWord)));
        rootinfo(:,c)=root;
        deltainfo(:,c)=delta;
        delta1info(:,c)=delta1;
        psolinfo(:,c)=psols;
        windinfo(:,c)=winds;
        ambtempinfo(:,c)=ambtemps;
        currentinfo(:,c)=currents;
    end
    csvwrite(strcat(foldersource,'rootinfo.csv'),rootinfo);
    csvwrite(strcat(foldersource,'deltainfo.csv'),deltainfo);
    csvwrite(strcat(foldersource,'delta1info.csv'),delta1info);
    csvwrite(strcat(foldersource,'psolinfo.csv'),psolinfo);
    csvwrite(strcat(foldersource,'windinfo.csv'),windinfo);
    csvwrite(strcat(foldersource,'ambtempinfo.csv'),ambtempinfo);
    csvwrite(strcat(foldersource,'currentinfo.csv'),currentinfo);
    
    writetable(conductorData,'ConductorValidationResults.csv'); 
end
